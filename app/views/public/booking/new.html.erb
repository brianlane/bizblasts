<%# View for public/booking#new %>
<%# Accessed via tenant subdomain: e.g., http://mybiz.lvh.me:3000/book?service_id=1 %>

<% @business = current_tenant %>

<div class="container mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold mb-6">Book Service: <%= @service.name %></h1>
  <p class="text-lg text-gray-700 mb-4">at <%= @business.name %></p>

  <%= form_with(model: @booking, url: tenant_bookings_path, method: :post, local: true) do |form| %>
    <%# Render errors if any %>
    <% if @booking.errors.any? %>
      <div id="error_explanation" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
        <strong class="font-bold">Oops!</strong>
        <span class="block sm:inline"><%= pluralize(@booking.errors.count, "error") %> prohibited this booking from being saved:</span>
        <ul class="mt-2 list-disc list-inside">
          <% @booking.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <%# Hidden field for service_id %>
    <%= form.hidden_field :service_id, value: @service.id %>

    <% if current_user.role == 'client' %>
      <%# Client: submit staff_member_id and tenant_customer_id as hidden fields %>
      <%= form.hidden_field :staff_member_id, value: @booking.staff_member_id %>
      <%= form.hidden_field :tenant_customer_id, value: @booking.tenant_customer_id %>
    <% else %>
      <%# Staff/Manager: show staff and customer selection %>
      <% if @service.staff_members.any? %>
        <div class="mb-4">
          <%= form.label :staff_member_id, "Select Staff Member", class: "block text-gray-700 text-sm font-bold mb-2" %>
          <%= form.collection_select :staff_member_id, @service.staff_members.active, :id, :name, {}, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
        </div>
      <% else %>
        <p class="text-red-600 mb-4">Note: This service currently has no staff assigned and cannot be booked.</p>
      <% end %>

      <!-- Customer selection -->
      <div class="mb-4">
        <%= form.label :tenant_customer_id, "Customer", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.select :tenant_customer_id,
              options_for_select(@business.tenant_customers.map { |c| [c.email.present? ? "#{c.name} (#{c.email})" : c.name, c.id] } + [["Create new customer", "new"]], @booking.tenant_customer_id),
              { include_blank: "Select existing customer" },
              class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
              id: "tenant_customer_id"
        %>
      </div>

      <!-- New customer fields (hidden & disabled by default) -->
      <div id="new-tenant-customer-fields" class="hidden mb-4">
        <h3 class="text-lg font-bold mb-2">New Customer Details</h3>
        <%= form.fields_for :tenant_customer_attributes, @booking.tenant_customer do |cust_fields| %>
          <div class="mb-4">
            <%= cust_fields.label :name, class: "block text-gray-700 text-sm font-bold mb-2" %>
            <%= cust_fields.text_field :name, disabled: true, required: true, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
          </div>
          <div class="mb-4">
            <%= cust_fields.label :email, class: "block text-gray-700 text-sm font-bold mb-2" %>
            <%= cust_fields.email_field :email, disabled: true, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
          </div>
          <div class="mb-4">
            <%= cust_fields.label :phone, class: "block text-gray-700 text-sm font-bold mb-2" %>
            <%= cust_fields.telephone_field :phone, disabled: true, required: true, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
          </div>
        <% end %>
      </div>
    <% end %>

    <%# TODO: Implement Date/Time selection based on service/staff availability %>
    <%# This likely requires JavaScript integration (e.g., Flatpickr, calendar component) %>
    <%# For now, a simple datetime select %>
    <div class="mb-4">
      <%= form.label :start_time, class: "block text-gray-700 text-sm font-bold mb-2" %>
      <%# Adjust datetime select options as needed %>
      <%= form.datetime_select :start_time, { minute_step: 15, start_year: Date.today.year, end_year: Date.today.year + 1 }, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
    </div>

    <div class="mb-4">
      <%= form.label :notes, "Notes (Optional)", class: "block text-gray-700 text-sm font-bold mb-2" %>
      <%= form.text_area :notes, rows: 4, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
    </div>

    <%# Display Price/Duration %>
    <div class="mb-6 p-4 bg-gray-100 rounded">
      <p><strong>Duration:</strong> <%= @service.duration %> minutes</p>
      <p><strong>Price:</strong> <%= number_to_currency(@service.price) %></p>
    </div>

    <div class="flex items-center justify-between">
      <%# Only show submit button if staff members are available %>
      <% if @service.staff_members.any? %>
        <%= form.submit "Confirm Booking", class: "bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer" %>
      <% else %>
        <%# Optionally add a disabled button or just hide it %>
        <span class="text-gray-500">(Booking unavailable)</span>
      <% end %>
      <%= link_to 'Cancel', tenant_services_page_path, class: "inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800" %>
    </div>
  <% end %>

</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const customerSelect = document.getElementById('tenant_customer_id');
    const newFieldsDiv = document.getElementById('new-tenant-customer-fields');
    const nestedInputs = newFieldsDiv.querySelectorAll('input');
    
    function toggleCustomerFields() {
      if (customerSelect && customerSelect.value === 'new') {
        newFieldsDiv.classList.remove('hidden');
        nestedInputs.forEach(input => {
          input.disabled = false;
          // only name and phone are required, email remains optional
          if (input.type === 'email') {
            input.required = false;
          } else {
            input.required = true;
          }
        });
      } else {
        newFieldsDiv.classList.add('hidden');
        nestedInputs.forEach(input => { input.disabled = true; input.required = false; });
      }
    }

    if (customerSelect) {
      customerSelect.addEventListener('change', toggleCustomerFields);
      toggleCustomerFields();
    }
  });
</script> 