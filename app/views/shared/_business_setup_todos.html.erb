<div class="bg-info/10 border border-info/20 rounded-lg p-3 sm:p-4">
  <div class="flex items-start">
    <svg class="w-5 h-5 text-info mt-0.5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
    
    <div class="flex-1 min-w-0">
      <h4 class="text-sm sm:text-base font-semibold text-info mb-2">
        ðŸ“‹ Business Setup: <%= setup_service.setup_summary %>
      </h4>
      
      <% if setup_service.todo_items.any? %>
        <div class="text-sm text-gray-700 mb-3">
          Complete these steps to get your business ready for customers:
        </div>
        
        <ul class="space-y-3">
          <% setup_service.todo_items.each do |item| %>
            <li class="bg-white rounded border border-gray-200 p-3" data-todo-key="<%= item[:key] %>">
              <!-- Mobile Layout: Stack everything vertically -->
              <div class="block sm:hidden">
                <div class="flex items-start justify-between mb-2">
                  <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium
                    <%= case item[:priority]
                        when :high then 'bg-red-100 text-red-800'
                        when :medium then 'bg-yellow-100 text-yellow-800'
                        when :low then 'bg-green-100 text-green-800'
                        end %>">
                    <%= item[:priority].to_s.capitalize %>
                  </span>
                </div>
                <div class="text-gray-800 text-sm mb-3 leading-relaxed">
                  <%= item[:text] %>
                </div>
                <div class="flex flex-col space-y-2">
                  <% if item[:url] %>
                    <a href="<%= item[:url] %>" 
                       class="inline-flex items-center justify-center px-4 py-2 border border-info text-info text-sm font-medium rounded-md hover:bg-info hover:text-white transition-colors duration-200"
                       onclick="sessionStorage.setItem('hideTodo_<%= item[:key] %>', 'true'); this.closest('li').style.display='none'; return true;">
                      <%= item[:action] %>
                    </a>
                  <% end %>
                  <button
                    type="button"
                    data-url="<%= business_manager_setup_reminder_path(key: item[:key]) %>"
                    class="text-xs text-gray-500 text-center py-1"
                    onclick="event.preventDefault(); const btn=this; fetch(btn.dataset.url, {method:'DELETE', headers:{'X-CSRF-Token': document.querySelector('meta[name=csrf-token]').content}}).then(()=>btn.closest('li').style.display='none');"
                  >
                    Don't Show This Reminder
                  </button>
                </div>
              </div>
              
              <!-- Desktop Layout: Horizontal layout -->
              <div class="hidden sm:flex items-center justify-between">
                <div class="flex items-center min-w-0 flex-1">
                  <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium mr-3 flex-shrink-0
                    <%= case item[:priority]
                        when :high then 'bg-red-100 text-red-800'
                        when :medium then 'bg-yellow-100 text-yellow-800'
                        when :low then 'bg-green-100 text-green-800'
                        end %>">
                    <%= item[:priority].to_s.capitalize %>
                  </span>
                  <span class="text-gray-800 truncate"><%= item[:text] %></span>
                </div>
                
                <div class="flex items-center flex-shrink-0 ml-4">
                  <% if item[:url] %>
                    <a href="<%= item[:url] %>" 
                       class="inline-flex items-center px-3 py-1 border border-info text-info text-sm font-medium rounded-md hover:bg-info hover:text-white transition-colors duration-200"
                       onclick="sessionStorage.setItem('hideTodo_<%= item[:key] %>', 'true'); this.closest('li').style.display='none'; return true;">
                      <%= item[:action] %>
                    </a>
                  <% end %>
                  <button
                    type="button"
                    data-url="<%= business_manager_setup_reminder_path(key: item[:key]) %>"
                    class="ml-3 text-xs text-gray-500 hover:text-gray-700"
                    onclick="event.preventDefault(); const btn=this; fetch(btn.dataset.url, {method:'DELETE', headers:{'X-CSRF-Token': document.querySelector('meta[name=csrf-token]').content}}).then(()=>btn.closest('li').style.display='none');"
                  >
                    Don't Show This Reminder
                  </button>
                </div>
              </div>
            </li>
          <% end %>
        </ul>
      <% end %>
    </div>
    
    <button type="button" class="ml-2 flex-shrink-0 text-gray-400 hover:text-gray-600" onclick="this.parentElement.parentElement.style.display='none'">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>
</div>

<script>
  // Hide todo items that were clicked in this session, then clear the hidden state
  document.addEventListener('DOMContentLoaded', function() {
    const todoItems = document.querySelectorAll('[data-todo-key]');
    todoItems.forEach(function(item) {
      const key = item.getAttribute('data-todo-key');
      if (sessionStorage.getItem('hideTodo_' + key) === 'true') {
        item.style.display = 'none';
        // Clear the hidden state so it can show again on next page load if task is still incomplete
        sessionStorage.removeItem('hideTodo_' + key);
      }
    });
  });
</script> 