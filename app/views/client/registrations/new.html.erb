<div class="max-w-md mx-auto">
  <div class="bg-white shadow-lg rounded-lg p-6 md:p-8">
    <!-- Header -->
    <div class="text-center mb-6">
      <h2 class="text-2xl md:text-3xl font-bold text-dark mb-2">Join as a Customer</h2>
      <p class="text-gray-600">Create your customer account here</p>
      <div class="text-gray-400 text-xs mt-2">
        <p>Customer Accounts are not necessary.</p>
        <p>They are only used for your tracking and rewards.</p>
        <p>You can create a customer account later if you want to.</p>
      </div>
    </div>

    <%= form_for(resource, as: resource_name, url: client_registration_path, local: true, class: "space-y-6") do |f| %>
      <%= render "devise/shared/error_messages", resource: resource %>

      <!-- Name Fields -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <%= f.label :first_name, class: "block text-sm font-medium text-dark mb-1" %>
          <%= f.text_field :first_name, autofocus: true, required: true,
                class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors" %>
        </div>

        <div>
          <%= f.label :last_name, class: "block text-sm font-medium text-dark mb-1" %>
          <%= f.text_field :last_name, required: true,
                class: "w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors" %>
        </div>
      </div>

      <!-- Email Field -->
      <div>
        <%= f.label :email, class: "block text-sm font-medium text-dark mb-1" %>
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"></path>
            </svg>
          </div>
          <%= f.email_field :email, autocomplete: "email", required: true,
                pattern: "[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$",
                title: "Please enter a valid email address",
                class: "w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors" %>
        </div>
      </div>

      <!-- Phone Field -->
      <div>
        <%= f.label :phone, "Phone Number", class: "block text-sm font-medium text-dark mb-1" %>
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
            </svg>
          </div>
          <%= f.telephone_field :phone, autocomplete: "tel", required: true,
                pattern: "^(\+1[-.\s]?)?\(?([0-9]{3})\)?[-.\s]?([0-9]{3})[-.\s]?([0-9]{4})$",
                title: "Please enter a valid US phone number (e.g., (555) 123-4567 or 555-123-4567)",
                placeholder: "(555) 123-4567",
                class: "w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors" %>
        </div>
      </div>

      <!-- Password Field -->
      <div>
        <%= f.label :password, class: "block text-sm font-medium text-dark mb-1" %>
        <% if @minimum_password_length %>
          <p class="text-xs text-gray-500 mb-1">(<%= @minimum_password_length %> characters minimum)</p>
        <% end %>
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
            </svg>
          </div>
          <%= f.password_field :password, autocomplete: "new-password", required: true,
                class: "w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors" %>
        </div>
      </div>

      <!-- Password Confirmation -->
      <div>
        <%= f.label :password_confirmation, class: "block text-sm font-medium text-dark mb-1" %>
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
            </svg>
          </div>
          <%= f.password_field :password_confirmation, autocomplete: "new-password", required: true,
                class: "w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors" %>
        </div>
      </div>

      <!-- Legal Agreement Section -->
      <div class="border-t border-gray-200 pt-6">
        <div class="space-y-3 bg-gray-50 p-4 rounded-lg">
          <div class="flex items-start">
            <%= check_box_tag 'policy_acceptances[privacy_policy]', '1', false, 
                  required: true, 
                  class: "mt-1 h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary" %>
            <label for="policy_acceptances_privacy_policy" class="ml-3 text-sm text-gray-700">
              I agree to the 
              <%= link_to "Privacy Policy", privacypolicy_path, target: "_blank", 
                    class: "text-primary hover:underline font-medium" %>
              (how BizBlasts handles payment/booking data)
              <span class="text-red-500">*</span>
            </label>
          </div>
          
          <div class="flex items-start">
            <%= check_box_tag 'policy_acceptances[terms_of_service]', '1', false, 
                  required: true, 
                  class: "mt-1 h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary" %>
            <label for="policy_acceptances_terms_of_service" class="ml-3 text-sm text-gray-700">
              I agree to the 
              <%= link_to "Terms of Service", terms_path, target: "_blank", 
                    class: "text-primary hover:underline font-medium" %>
              (payment processing, booking platform rules)
              <span class="text-red-500">*</span>
            </label>
          </div>
          
          <div class="flex items-start">
            <%= check_box_tag 'policy_acceptances[acceptable_use_policy]', '1', false, 
                  required: true, 
                  class: "mt-1 h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary" %>
            <label for="policy_acceptances_acceptable_use_policy" class="ml-3 text-sm text-gray-700">
              I agree to the 
              <%= link_to "Acceptable Use Policy", acceptableusepolicy_path, target: "_blank", 
                    class: "text-primary hover:underline font-medium" %>
              (booking system usage rules)
              <span class="text-red-500">*</span>
            </label>
          </div>
          
          <!-- Notification Consent Checkbox -->
          <div class="flex items-start border-t border-gray-200 pt-3 mt-3">
            <%= f.check_box :bizblasts_notification_consent, 
                  { class: "mt-1 h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary" }, 
                  "1", "0" %>
            <label for="user_bizblasts_notification_consent" class="ml-3 text-sm text-gray-700">
              I would like to receive notifications from BizBlasts (email confirmations, text reminders, promotions, updates, etc.)
              <br><span class="text-xs text-gray-500">You can change this preference anytime in your account settings. Unchecking this will disable all notifications (email and text).</span>
            </label>
          </div>
        </div>
      </div>

      <!-- Submit Button -->
      <div class="pt-2">
        <%= f.submit "Create Customer Account", class: "w-full bg-accent hover:bg-orange-600 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2 cursor-pointer" %>
      </div>
    <% end %>

    <%# render "devise/shared/links" %>
  </div>
</div>

<script type="text/javascript">
  // Enhanced form validation functions
  function validateField(input, isValid, errorMessage) {
    const existingError = input.parentElement.querySelector('.field-error');
    if (existingError) {
      existingError.remove();
    }

    if (!isValid) {
      input.classList.add('border-red-500', 'ring-red-500');
      input.classList.remove('border-gray-300', 'focus:border-primary', 'focus:ring-primary');
      
      const errorDiv = document.createElement('div');
      errorDiv.className = 'field-error text-red-500 text-xs mt-1';
      errorDiv.textContent = errorMessage;
      input.parentElement.appendChild(errorDiv);
    } else {
      input.classList.remove('border-red-500', 'ring-red-500');
      input.classList.add('border-gray-300', 'focus:border-primary', 'focus:ring-primary');
    }
  }

  function validateEmail(email) {
    const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/i;
    return emailRegex.test(email);
  }

  function validatePhone(phone) {
    const phoneRegex = /^(\+1[-.\s]?)?\(?([0-9]{3})\)?[-.\s]?([0-9]{3})[-.\s]?([0-9]{4})$/;
    return phoneRegex.test(phone);
  }

  // Add real-time validation listeners
  function initializeClientRegistrationForm() {
    // Email validation
    const emailFields = document.querySelectorAll('input[type="email"]');
    emailFields.forEach(field => {
      field.addEventListener('blur', function() {
        if (this.value) {
          const isValid = validateEmail(this.value);
          validateField(this, isValid, 'Please enter a valid email address');
        }
      });
    });

    // Phone validation
    const phoneFields = document.querySelectorAll('input[type="tel"]');
    phoneFields.forEach(field => {
      field.addEventListener('blur', function() {
        if (this.value) {
          const isValid = validatePhone(this.value);
          validateField(this, isValid, 'Please enter a valid US phone number (e.g., (555) 123-4567)');
        }
      });
    });

    // Phone number formatting
    phoneFields.forEach(field => {
      field.addEventListener('input', function() {
        let value = this.value.replace(/\D/g, ''); // Remove non-digits
        if (value.length >= 6) {
          value = value.replace(/(\d{3})(\d{3})(\d+)/, '($1) $2-$3');
        } else if (value.length >= 3) {
          value = value.replace(/(\d{3})(\d+)/, '($1) $2');
        }
        this.value = value;
      });
    });

    // Password confirmation validation
    const passwordField = document.querySelector('input[name="user[password]"]');
    const passwordConfirmationField = document.querySelector('input[name="user[password_confirmation]"]');
    
    if (passwordField && passwordConfirmationField) {
      passwordConfirmationField.addEventListener('blur', function() {
        if (this.value && passwordField.value) {
          const isValid = this.value === passwordField.value;
          validateField(this, isValid, 'Passwords do not match');
        }
      });
    }
  }

  // Initialize on both DOMContentLoaded and turbo:load for Turbo compatibility
  document.addEventListener('DOMContentLoaded', initializeClientRegistrationForm);
  document.addEventListener('turbo:load', initializeClientRegistrationForm);
</script> 