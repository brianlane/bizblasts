<!DOCTYPE html>
<html>
<head>
  <title><%= @current_business&.name || "Business Manager" %></title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <%# Tailwind and application CSS bundles %>
  <%= stylesheet_link_tag "tailwind", data: { "turbo-track": "reload" } %>
  <%= stylesheet_link_tag "custom", data: { "turbo-track" => "reload" } %>
  <%= javascript_include_tag "application", defer: true %>
  
  <style>
    /* Force all SVGs to a reasonable size */
    svg {
      max-width: 24px !important;
      max-height: 24px !important;
      width: 24px !important;
      height: 24px !important;
    }
    
    /* Allow explicit sizing for SVGs with specific size classes */
    svg.large-icon {
      max-width: 48px !important;
      max-height: 48px !important;
      width: 48px !important;
      height: 48px !important;
    }
    
    svg.small-icon {
      max-width: 16px !important;
      max-height: 16px !important;
      width: 16px !important;
      height: 16px !important;
    }
  </style>
</head>

<body class="bg-gray-100">
  <%# Policy Acceptance Modal %>
  <%= render 'shared/policy_acceptance_modal' %>

  <div class="flex h-screen bg-gray-100 relative">
    <!-- Sidebar Toggle Button (Mobile) -->
    <button id="sidebar-toggle" class="fixed top-4 left-4 z-50 lg:hidden bg-gray-800 text-white p-2 rounded-md hover:bg-gray-700 transition-colors shadow-lg">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>

    <!-- Sidebar Toggle Button (Desktop) -->
    <button id="desktop-sidebar-toggle" class="fixed top-4 z-50 hidden lg:block bg-gray-800 text-white p-2 rounded-md hover:bg-gray-700 transition-colors shadow-lg desktop-toggle-btn">
      <svg id="desktop-toggle-icon" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>

    <!-- Overlay for mobile sidebar -->
    <div id="sidebar-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden"></div>

    <!-- Sidebar -->
    <div id="sidebar" class="fixed lg:relative w-64 bg-gray-800 text-white h-full flex flex-col z-40 transform transition-transform duration-300 ease-in-out">
      <div class="p-4 flex-shrink-0">
        <div class="flex items-center justify-between">
          <h2 class="text-xl lg:text-2xl font-semibold"><%= @current_business&.name %></h2>
          <!-- Close button for mobile -->
          <button id="sidebar-close" class="lg:hidden text-white hover:text-gray-300">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
      </div>
      
      <nav class="flex-1 px-4 pb-4 overflow-y-auto">
        <ul class="space-y-1">
          <li>
            <%= link_to business_manager_dashboard_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_dashboard_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"/>
              </svg>
              <span class="font-medium">Dashboard</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_bookings_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_bookings_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
              </svg>
              <span class="font-medium">Bookings</span>
            <% end %>
          </li>
          
          <% if defined?(@current_business) && @current_business&.respond_to?(:full_url) && @current_business.present? %>
            <li>
              <%= link_to @current_business.full_url, target: "_blank", class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors" do %>
                <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9m0 9c-5 0-9-4-9-9s4-9 9-9"/>
                </svg>
                <span class="font-medium">Website</span>
                <svg class="w-4 h-4 ml-auto flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                </svg>
              <% end %>
            </li>
          <% end %>
          
          <li>
            <%= link_to business_manager_staff_members_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_staff_members_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
              </svg>
              <span class="font-medium">Staff</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_services_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_services_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
              </svg>
              <span class="font-medium">Services</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_products_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_products_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"/>
              </svg>
              <span class="font-medium">Products</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_shipping_methods_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_shipping_methods_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
              </svg>
              <span class="font-medium">Shipping Methods</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_tax_rates_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_tax_rates_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"/>
              </svg>
              <span class="font-medium">Tax Rates</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_customers_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_customers_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
              <span class="font-medium">Customers</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_orders_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_orders_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"/>
              </svg>
              <span class="font-medium">Orders</span>
            <% end %>
          </li>
          
          <li>
            <%= link_to business_manager_settings_path, class: "flex items-center px-4 py-3 text-white rounded-lg hover:bg-gray-700 transition-colors #{current_page?(business_manager_settings_path) ? 'bg-gray-700' : ''}" do %>
              <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
              </svg>
              <span class="font-medium">Settings</span>
            <% end %>
          </li>
        </ul>
      </nav>
      
      <div class="p-4 border-t border-gray-700 flex-shrink-0">
        <p class="text-sm text-gray-400 mb-3">Signed in as <%= current_user.email %> (<%= current_user.role.humanize %>)</p>
        <%= button_to "Sign Out", destroy_user_session_path, method: :delete, 
              class: "w-full py-3 px-4 text-center bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-medium focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-offset-gray-800",
              form: { class: "w-full" } %>
      </div>
    </div>

    <!-- Main Content Area -->
    <div id="main-content" class="flex-1 flex flex-col overflow-hidden transition-all duration-300 ease-in-out">
      <main class="flex-1 overflow-x-hidden overflow-y-auto bg-gray-100 p-4 sm:p-6 pt-16 lg:pt-6">
        <%# Display flash messages %>
        
        <%# Business Setup Todo Flash (Blue) %>
        <% if flash[:business_setup] %>
          <div class="mb-4" role="alert">
            <%= flash[:business_setup] %>
          </div>
        <% end %>
        
        <%# Standard Flash Messages %>
        <% if flash[:notice] %>
          <div class="bg-success text-white px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline"><%= flash[:notice] %></span>
          </div>
        <% end %>
        <% if flash[:alert] %>
          <div class="bg-error text-white px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline"><%= flash[:alert] %></span>
          </div>
        <% end %>

        <%= yield %>
      </main>
    </div>
  </div>

  <!-- Sidebar Toggle JavaScript -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      
      const sidebar = document.getElementById('sidebar');
      const sidebarOverlay = document.getElementById('sidebar-overlay');
      const sidebarToggle = document.getElementById('sidebar-toggle');
      const sidebarClose = document.getElementById('sidebar-close');
      const desktopSidebarToggle = document.getElementById('desktop-sidebar-toggle');
      const desktopToggleIcon = document.getElementById('desktop-toggle-icon');
      const mainContent = document.getElementById('main-content');
      
      let sidebarOpen = window.innerWidth >= 1024; // Default open on desktop
      
      // Set initial classes based on screen size and desired state
      function setInitialState() {
        const isLargeScreen = window.innerWidth >= 1024;
        if (isLargeScreen) {
          // Desktop: start with sidebar open
          sidebarOpen = true;
          sidebar.classList.remove('-translate-x-full');
          sidebar.classList.add('translate-x-0');
          if (desktopSidebarToggle) {
            desktopSidebarToggle.style.left = '270px';
            desktopSidebarToggle.classList.add('sidebar-open');
          }
          if (desktopToggleIcon) {
            desktopToggleIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
          }
          // Hide mobile toggle on desktop
          if (sidebarToggle) {
            sidebarToggle.style.display = 'none';
          }
        } else {
          // Mobile: start with sidebar closed
          sidebarOpen = false;
          sidebar.classList.add('-translate-x-full');
          sidebar.classList.remove('translate-x-0');
          sidebar.classList.remove('show');
          if (sidebarToggle) {
            sidebarToggle.style.display = 'block'; // Ensure hamburger button is visible initially on mobile
          }
          if (desktopSidebarToggle) {
            desktopSidebarToggle.style.left = '16px';
            desktopSidebarToggle.classList.remove('sidebar-open');
          }
          if (desktopToggleIcon) {
            desktopToggleIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
          }
        }
        if (sidebarOverlay) {
          sidebarOverlay.classList.add('hidden');
          sidebarOverlay.classList.remove('show');
        }
        document.body.style.overflow = '';
      }
      
      function updateSidebarState() {
        const isLargeScreen = window.innerWidth >= 1024;
        
        if (isLargeScreen) {
          // Desktop behavior
          if (sidebarOpen) {
            sidebar.classList.remove('-translate-x-full');
            sidebar.classList.add('translate-x-0');
            if (desktopSidebarToggle) {
              desktopSidebarToggle.style.left = '270px'; // Position toggle button to the right of sidebar
              desktopSidebarToggle.classList.add('sidebar-open');
            }
            if (desktopToggleIcon) {
              desktopToggleIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
            }
            // Ensure mobile toggle is hidden on desktop
            if (sidebarToggle) {
              sidebarToggle.style.display = 'none';
            }
          } else {
            sidebar.classList.add('-translate-x-full');
            sidebar.classList.remove('translate-x-0');
            if (desktopSidebarToggle) {
              desktopSidebarToggle.style.left = '16px'; // Position toggle button at left edge
              desktopSidebarToggle.classList.remove('sidebar-open');
            }
            if (desktopToggleIcon) {
              desktopToggleIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
            }
            // Ensure mobile toggle is hidden on desktop
            if (sidebarToggle) {
              sidebarToggle.style.display = 'none';
            }
          }
          if (sidebarOverlay) {
            sidebarOverlay.classList.add('hidden');
          }
          document.body.style.overflow = '';
        } else {
          // Mobile behavior
          if (desktopSidebarToggle) {
            desktopSidebarToggle.style.left = '16px';
            desktopSidebarToggle.classList.remove('sidebar-open');
          }
          if (sidebarOpen) {
            sidebar.classList.remove('-translate-x-full');
            sidebar.classList.add('translate-x-0');
            sidebar.classList.add('show');
            if (sidebarToggle) {
              sidebarToggle.style.display = 'none'; // Hide hamburger button when sidebar is open
            }
            if (sidebarOverlay) {
              sidebarOverlay.classList.remove('hidden');
              sidebarOverlay.classList.add('show');
            }
            document.body.style.overflow = 'hidden';
          } else {
            sidebar.classList.add('-translate-x-full');
            sidebar.classList.remove('translate-x-0');
            sidebar.classList.remove('show');
            if (sidebarToggle) {
              sidebarToggle.style.display = 'block'; // Show hamburger button when sidebar is closed
            }
            if (sidebarOverlay) {
              sidebarOverlay.classList.add('hidden');
              sidebarOverlay.classList.remove('show');
            }
            document.body.style.overflow = '';
          }
        }
        

      }
      
      function toggleSidebar() {
        sidebarOpen = !sidebarOpen;
        updateSidebarState();
      }
      
      function closeSidebar() {
        sidebarOpen = false;
        updateSidebarState();
      }
      
      // Event listeners with better error handling
      if (sidebarToggle) {
        sidebarToggle.addEventListener('click', function(e) {
          e.preventDefault();
          toggleSidebar();
        });
      }
      
      if (desktopSidebarToggle) {
        desktopSidebarToggle.addEventListener('click', function(e) {
          e.preventDefault();
          toggleSidebar();
        });
      }
      
      if (sidebarClose) {
        sidebarClose.addEventListener('click', function(e) {
          e.preventDefault();
          closeSidebar();
        });
      }
      
      if (sidebarOverlay) {
        sidebarOverlay.addEventListener('click', function(e) {
          e.preventDefault();
          closeSidebar();
        });
      }
      
      // Close sidebar when clicking on navigation links on mobile
      const navLinks = sidebar.querySelectorAll('a');
      navLinks.forEach(link => {
        link.addEventListener('click', () => {
          if (window.innerWidth < 1024) {
            closeSidebar();
          }
        });
      });
      
      // Handle window resize
      window.addEventListener('resize', () => {
        // Reinitialize state on screen size change to handle button visibility correctly
        setInitialState();
      });
      
      // Initial state
      setInitialState();
      
      // Test function - you can call this in the console
      window.testSidebarToggle = function() {
        toggleSidebar();
      };
    });
  </script>

  <% if user_signed_in? %>
    <%# Fallback script to ensure modal shows when needed %>
    <script>
      // Business Manager Policy modal check
      document.addEventListener('DOMContentLoaded', function() {
        
        // Try to initialize the PolicyAcceptance class if available
        if (typeof PolicyAcceptance !== 'undefined') {
          new PolicyAcceptance();
        }
        
        // Small delay to let other scripts initialize
        setTimeout(function() {
          const modal = document.getElementById('policy-acceptance-modal');
          if (modal) {
            
            // Check if modal should be shown by calling the policy status
            fetch('/policy_status', {
              headers: {
                'Accept': 'application/json',
                'X-CSRF-Token': document.querySelector('[name="csrf-token"]')?.content || ''
              }
            })
            .then(response => {
              if (response.ok) {
                return response.json();
              } else if (response.status === 401) {
                return null;
              }
              throw new Error('Failed to check policy status');
            })
            .then(data => {
              if (data && data.requires_policy_acceptance && data.missing_policies && data.missing_policies.length > 0) {
                
                // Force modal to be visible if the main script failed
                if (modal.classList.contains('hidden')) {
                  modal.classList.remove('hidden');
                  modal.style.display = 'block';
                  modal.style.zIndex = '9999';
                  document.body.style.overflow = 'hidden';
                  
                  // Add emergency styling to ensure visibility
                  modal.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
                  modal.style.position = 'fixed';
                  modal.style.top = '0';
                  modal.style.left = '0';
                  modal.style.width = '100%';
                  modal.style.height = '100%';
                  
                  // Show a simple message if the dynamic content failed to load
                  const container = document.getElementById('policies-to-accept');
                  if (container && container.children.length === 0) {
                    container.innerHTML = `
                      <div class="text-center p-8 bg-yellow-50 border border-yellow-200 rounded">
                        <h3 class="text-lg font-medium text-yellow-800 mb-4">Policy Acceptance Required</h3>
                        <p class="text-yellow-700 mb-4">You need to accept our updated policies to continue using BizBlasts.</p>
                        <a href="/policy_acceptances" class="inline-block bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700">
                          Accept Policies →
                        </a>
                      </div>
                    `;
                  }
                }
              } else {
              }
            })
            .catch(error => {
              console.error('[BusinessManager PolicyFallback] Error checking policy status:', error);
            });
          }
        }, 1000);
      });
    </script>
  <% end %>
</body>
</html> 