<%# app/views/business_manager/products/_form.html.erb %>

<%= form_with(model: [:business_manager, @product], local: true) do |form| %>
  <% if @product.errors.any? %>
    <div id="error_explanation" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
      <strong class="font-bold"><%= pluralize(@product.errors.count, "error") %> prohibited this product from being saved:</strong>
      <ul class="mt-2 list-disc list-inside">
        <% @product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
    <!-- Basic Information Section -->
    <div class="space-y-4">
      <h3 class="text-lg font-semibold text-gray-900 border-b pb-2">Basic Information</h3>
      
      <div>
        <%= form.label :name, class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.text_field :name, required: true, 
              class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500" %>
      </div>

      <div>
        <%= form.label :description, class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.text_area :description, rows: 4, 
              class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500" %>
      </div>

      <div>
        <%= form.label :category_id, "Category", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.collection_select :category_id, @current_business.categories.order(:name), :id, :name, 
              { include_blank: 'No Category' }, 
              { class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500" } %>
      </div>

      <div>
        <%= form.label :product_type, "Product Type", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.select :product_type, 
              Product.product_types.keys.map { |pt| [pt.titleize, pt] }, 
              { include_blank: 'Select Type' }, 
              { class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500" } %>
      </div>
    </div>

    <!-- Pricing and Inventory Section -->
    <div class="space-y-4">
      <h3 class="text-lg font-semibold text-gray-900 border-b pb-2">Pricing & Inventory</h3>
      
      <div>
        <%= form.label :price, "Base Price ($)", class: "block text-gray-700 text-sm font-bold mb-2" %>
        <%= form.number_field :price, step: 0.01, required: true, 
              class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500" %>
      </div>

      <% unless @product.has_variants? %>
        <div>
          <%= form.label :stock_quantity, "Stock Quantity", class: "block text-gray-700 text-sm font-bold mb-2" %>
          <%= form.number_field :stock_quantity, min: 0, 
                class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500" %>
          <p class="mt-1 text-sm text-gray-500">Only applies if the product has no variants defined below.</p>
        </div>
      <% end %>

      <!-- Status Options -->
      <div class="space-y-3">
        <div class="flex items-center">
          <%= form.check_box :active, class: "form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500" %>
          <%= form.label :active, "Active", class: "ml-2 text-gray-700 text-sm font-bold" %>
        </div>

        <div class="flex items-center">
          <%= form.check_box :featured, class: "form-checkbox h-5 w-5 text-blue-600 rounded focus:ring-blue-500" %>
          <%= form.label :featured, "Featured Product", class: "ml-2 text-gray-700 text-sm font-bold" %>
        </div>
      </div>
    </div>
  </div>

  <!-- Product Images Section -->
  <div class="mt-8 border-t pt-6">
    <h3 class="text-lg font-semibold text-gray-900 mb-4">Product Images</h3>
    
    <div class="mb-4">
      <%= form.label :images, "Add New Images", class: "block text-gray-700 text-sm font-bold mb-2" %>
      <%= form.file_field :images, multiple: true, 
            class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline focus:border-blue-500" %>
      <p class="mt-1 text-sm text-gray-500">Accepted formats: PNG, JPG/JPEG. Max size: 5MB per file.</p>
    </div>

    <% if @product.persisted? && @product.images.attached? %>
      <div class="mb-4">
        <h4 class="text-md font-medium mb-2 text-gray-700">Current Images:</h4>
        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
          <% @product.images.each do |img| %>
            <div class="bg-gray-50 rounded-lg p-2 text-center">
              <%= image_tag img.representation(resize_to_limit: [150, 150]), 
                    class: "w-full h-24 object-cover rounded mb-2" %>
              <p class="text-xs text-gray-600 truncate"><%= img.filename %></p>
            </div>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>

  <!-- Product Variants Section -->
  <div class="mt-8 border-t pt-6">
    <h3 class="text-lg font-semibold text-gray-900 mb-4">Product Variants</h3>
    <p class="text-sm text-gray-600 mb-4">Add variants if this product comes in different sizes, colors, or configurations.</p>
    
    <div id="product-variants" class="space-y-4">
      <%= form.fields_for :product_variants do |variant_form| %>
        <%= render 'variant_fields', form: variant_form %>
      <% end %>
      
      <div class="flex justify-start">
        <%= link_to '+ Add Variant', '#', id: 'add-variant', 
              class: "inline-flex items-center px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2" %>
      </div>
    </div>
  </div>

  <!-- Submit Button -->
  <div class="mt-8 border-t pt-6">
    <div class="flex flex-col sm:flex-row gap-4">
      <%= form.submit(@product.new_record? ? 'Create Product' : 'Update Product', 
            class: "inline-flex items-center justify-center px-6 py-3 bg-green-500 hover:bg-green-600 text-white font-bold rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 cursor-pointer") %>
    </div>
  </div>
<% end %>

<!-- Template for new variant fields (hidden) -->
<div id="variant-template" class="hidden">
  <%= form_with model: Product.new, local: true do |temp_form| %>
    <%= temp_form.fields_for :product_variants, Product.new.product_variants.build, child_index: 'NEW_RECORD' do |variant_form| %>
      <%= render 'variant_fields', form: variant_form %>
    <% end %>
  <% end %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle Add Variant button click
    const addVariantBtn = document.getElementById('add-variant');
    if (addVariantBtn) {
      addVariantBtn.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Get the template HTML
        const template = document.getElementById('variant-template');
        if (!template) return;
        
        let templateHTML = template.innerHTML;
        
        // Replace placeholder index with timestamp to ensure uniqueness
        const timestamp = new Date().getTime();
        templateHTML = templateHTML.replace(/NEW_RECORD/g, timestamp);
        
        // Insert the new variant fields
        const variantsContainer = document.getElementById('product-variants');
        const addButtonContainer = variantsContainer.querySelector('.flex');
        
        // Create a temporary div to hold the new content
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = templateHTML;
        
        // Find the actual variant fields in the template and insert before add button
        const variantField = tempDiv.querySelector('.variant-field');
        if (variantField && addButtonContainer) {
          variantsContainer.insertBefore(variantField, addButtonContainer);
        }
      });
    }
    
    // Handle Remove Variant links (with event delegation)
    document.addEventListener('click', function(e) {
      if (e.target.matches('.remove-variant') || e.target.closest('.remove-variant')) {
        e.preventDefault();
        const button = e.target.matches('.remove-variant') ? e.target : e.target.closest('.remove-variant');
        const variantFields = button.closest('.variant-field');
        
        if (!variantFields) return;
        
        // Check if this is an existing record
        const idField = variantFields.querySelector('input[name*="[id]"]');
        if (idField && idField.value) {
          // Create hidden field for _destroy
          const destroyField = document.createElement('input');
          destroyField.type = 'hidden';
          destroyField.name = idField.name.replace('[id]', '[_destroy]');
          destroyField.value = '1';
          variantFields.appendChild(destroyField);
          
          // Hide instead of remove for existing records
          variantFields.style.display = 'none';
        } else {
          // For new records, just remove from DOM
          variantFields.remove();
        }
      }
    });
  });
</script> 