<%# app/views/business_manager/products/_form.html.erb %>

<%= form_with(model: [:business_manager, @product], local: true) do |form| %>
  <% if @product.errors.any? %>
    <div style="color: red;">
      <h2><%= pluralize(@product.errors.count, "error") %> prohibited this product from being saved:</h2>
      <ul>
        <% @product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label :name %>
    <%= form.text_field :name, required: true %>
  </div>

  <div>
    <%= form.label :description %>
    <%= form.text_area :description %>
  </div>

  <div>
    <%= form.label :category_id %>
    <%= form.collection_select :category_id, @current_business.categories.order(:name), :id, :name, include_blank: 'No Category' %>
  </div>

  <div>
    <%= form.label :price %>
    <%= form.number_field :price, step: 0.01, required: true %>
  </div>

  <div>
    <%= form.label :product_type %>
    <%= form.select :product_type, Product.product_types.keys.map { |pt| [pt.titleize, pt] }, include_blank: 'Select Type' %>
  </div>

  <% unless @product.has_variants? %>
    <div>
      <%= form.label :stock_quantity, "Stock (if no variants)" %>
      <%= form.number_field :stock_quantity %>
      <small>Only applies if the product has no variants defined below.</small>
    </div>
  <% end %>

  <div>
    <%= form.check_box :active %>
    <%= form.label :active %>
  </div>

  <div>
    <%= form.check_box :featured %>
    <%= form.label :featured %>
  </div>

  <div>
    <%= form.label :images %><br>
    <%= form.file_field :images, multiple: true %>
    <%# Display existing images for editing %>
    <% if @product.persisted? && @product.images.attached? %>
      <div style="margin-top: 10px;">
        <strong>Current Images:</strong><br>
        <% @product.images.each do |img| %>
          <div style="display: inline-block; margin-right: 10px; text-align: center;">
            <%= image_tag img.representation(resize_to_limit: [100, 100]) %><br>
            <%# Add options to remove or set as primary if needed, possibly via images_attributes %>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>

  <hr style="margin: 20px 0;">

  <h3>Product Variants</h3>
  <div id="product-variants">
    <%= form.fields_for :product_variants do |variant_form| %>
      <%= render 'variant_fields', form: variant_form %>
    <% end %>
    <div class="links">
      <%= link_to 'Add Variant', '#', id: 'add-variant', class: 'btn btn-primary' %>
    </div>
  </div>

  <!-- Template for new variant fields (hidden) -->
  <div id="variant-template" style="display: none;">
    <%= form.fields_for :product_variants, Product.new.product_variants.build, child_index: 'NEW_RECORD' do |variant_form| %>
      <%= render 'variant_fields', form: variant_form %>
    <% end %>
  </div>

  <hr style="margin: 20px 0;">

  <div>
    <%= link_to (@product.new_record? ? 'Create Product' : 'Update Product'), '#', id: 'create-product-link', class: 'btn btn-primary' %>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle Add Variant button click
    document.getElementById('add-variant').addEventListener('click', function(e) {
      e.preventDefault();
      
      // Get the template HTML
      let template = document.getElementById('variant-template').innerHTML;
      
      // Replace placeholder index with timestamp to ensure uniqueness
      const timestamp = new Date().getTime();
      template = template.replace(/NEW_RECORD/g, timestamp);
      
      // Insert the new variant fields
      const variantsContainer = document.getElementById('product-variants');
      const linksDiv = variantsContainer.querySelector('.links');
      
      // Create a temporary div to hold the new content
      const tempDiv = document.createElement('div');
      tempDiv.innerHTML = template;
      
      // Insert the new fields before the links div
      variantsContainer.insertBefore(tempDiv.firstElementChild, linksDiv);
    });
    
    // Handle Remove Variant links (with event delegation)
    document.addEventListener('click', function(e) {
      if (e.target.matches('.remove-variant')) {
        e.preventDefault();
        const variantFields = e.target.closest('.nested-fields');
        
        // Add a hidden _destroy field for existing records
        if (variantFields.querySelector('input[name*="[id]"]')) {
          const id = variantFields.querySelector('input[name*="[id]"]').value;
          if (id) { 
            // Create hidden field for _destroy
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = variantFields.querySelector('input[name*="[id]"]').name.replace('[id]', '[_destroy]');
            input.value = '1';
            variantFields.appendChild(input);
            
            // Hide instead of remove for existing records
            variantFields.style.display = 'none';
            return;
          }
        }
        
        // For new records, just remove from DOM
        variantFields.remove();
      }
    });

    // Handle Create Product link
    var createLink = document.getElementById('create-product-link');
    if (createLink) {
      createLink.addEventListener('click', function(e) {
        e.preventDefault();
        this.closest('form').submit();
      });
    }
  });
</script> 