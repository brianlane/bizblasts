<div class="container">
  <div class="panel">
    <div class="panel-header">
      <h1>Customize Sidebar</h1>
      <div class="panel-actions">
        <%= link_to business_manager_settings_path do %>
          ← Back to Settings
        <% end %>
      </div>
    </div>
    <div class="panel-body">
      <%= form_with url: update_sidebar_business_manager_settings_sidebar_path, method: :patch, local: true, id: 'sidebar-customization-form' do |f| %>
        <ul id="sidebar-items-list" class="sortable-list">
          <% @sidebar_items.each_with_index do |item, idx| %>
            <% user_item = @user_sidebar_items[item[:key]] %>
            <% visible = user_item.nil? ? true : user_item.visible %>
            <li class="sidebar-item" data-key="<%= item[:key] %>">
              <span class="drag-handle">☰</span>
              <span class="sidebar-order">
                <button type="button" class="cursor-pointer arrow-up" <%= 'disabled' if idx == 0 %> aria-label="Move up">&#8593;</button>
                <span class="order-number"><%= idx + 1 %></span>
                <button type="button" class="cursor-pointer arrow-down" <%= 'disabled' if idx == @sidebar_items.size - 1 %> aria-label="Move down">&#8595;</button>
              </span>
              <%= hidden_field_tag "sidebar_items[#{idx}][visible]", false %>
              <%= check_box_tag "sidebar_items[#{idx}][visible]", true, visible, id: "sidebar_item_visible_#{item[:key]}" %>
              <span style="margin-left: 0.5em;"></span>
              <label for="sidebar_item_visible_<%= item[:key] %>"><%= item[:label] %></label>
              <%= hidden_field_tag "sidebar_items[#{idx}][key]", item[:key] %>
            </li>
          <% end %>
        </ul>
        <%= f.submit 'Save Sidebar', class: 'btn btn-primary cursor-pointer' %>
      <% end %>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
<script>
  function initSidebarSortableAndArrows() {
    var el = document.getElementById('sidebar-items-list');
    if (!el) return;
    new Sortable(el, {
      handle: '.drag-handle',
      animation: 150,
      onEnd: function() {
        updateOrderNumbers();
      }
    });
    // Arrow up/down logic
    function updateOrderNumbers() {
      var items = el.querySelectorAll('.sidebar-item');
      items.forEach(function(item, idx) {
        item.querySelector('.order-number').textContent = idx + 1;
        item.querySelector('.arrow-up').disabled = (idx === 0);
        item.querySelector('.arrow-down').disabled = (idx === items.length - 1);
      });
    }
    // Remove any previous listeners to avoid duplicates
    el.querySelectorAll('.arrow-up, .arrow-down').forEach(function(btn) {
      btn.onclick = null;
    });
    // Attach direct click listeners to each arrow button
    el.querySelectorAll('.arrow-up').forEach(function(btn) {
      btn.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopImmediatePropagation();
        var li = e.target.closest('.sidebar-item');
        if (li && li.previousElementSibling) {
          li.parentNode.insertBefore(li, li.previousElementSibling);
          updateOrderNumbers();
        }
      });
    });
    el.querySelectorAll('.arrow-down').forEach(function(btn) {
      btn.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopImmediatePropagation();
        var li = e.target.closest('.sidebar-item');
        if (li && li.nextElementSibling) {
          li.parentNode.insertBefore(li.nextElementSibling, li);
          updateOrderNumbers();
        }
      });
    });
    // On submit, update the order of hidden fields
    document.getElementById('sidebar-customization-form').addEventListener('submit', function(e) {
      var items = Array.from(el.querySelectorAll('.sidebar-item'));
      items.forEach(function(item, idx) {
        var keyInput = item.querySelector('input[type=hidden][name$="[key]"]');
        if (keyInput) {
          keyInput.setAttribute('name', `sidebar_items[${idx}][key]`);
        }
        var visibleInput = item.querySelector('input[type=checkbox][name$="[visible]"]');
        if (visibleInput) {
          visibleInput.setAttribute('name', `sidebar_items[${idx}][visible]`);
        }
        var hiddenVisibleInput = item.querySelector('input[type=hidden][name$="[visible]"]');
        if (hiddenVisibleInput) {
          hiddenVisibleInput.setAttribute('name', `sidebar_items[${idx}][visible]`);
        }
      });
    });
    updateOrderNumbers();
  }
  document.addEventListener('DOMContentLoaded', initSidebarSortableAndArrows);
  document.addEventListener('turbo:load', initSidebarSortableAndArrows);
</script>

<style>
  /* Base container and panel styles for consistency */
  .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
  .notice { background: #e8f4f8; border: 1px solid #b8e0ed; padding: 10px; margin-bottom: 20px; border-radius: 4px; }
  .alert { background: #f8e8e8; border: 1px solid #edb8b8; padding: 10px; margin-bottom: 20px; border-radius: 4px; }
  .panel { background: white; border: 1px solid #ddd; border-radius: 4px; overflow: hidden; box-shadow: 0 2px 3px rgba(0,0,0,0.1); }
  .panel-header { display: flex; justify-content: space-between; align-items: center; padding: 15px 20px; border-bottom: 1px solid #eee; }
  .panel-header h1 { font-size: 24px; margin: 0; }
  .panel-actions a { color: #0066cc; text-decoration: none; }
  .panel-actions a:hover { text-decoration: underline; }
  .panel-body { padding: 20px; }
  
  /* Sidebar sortable list styles */
  .sortable-list { list-style: none; padding: 0; margin: 0; }
  .sidebar-item { display: flex; align-items: center; margin-bottom: 10px; background: #f8fafc; border: 1px solid #e5e7eb; border-radius: 4px; padding: 8px; cursor: grab; }
  .drag-handle { margin-right: 12px; font-size: 18px; cursor: grab; }
  .sidebar-order { display: flex; align-items: center; margin-right: 12px; }
  .order-number { font-weight: bold; margin: 0 6px; min-width: 1.5em; text-align: center; }
  .arrow-up, .arrow-down { background: none; border: none; font-size: 18px; cursor: pointer; padding: 0 2px; }
  .arrow-up[disabled], .arrow-down[disabled] { color: #ccc; cursor: not-allowed; }
  
  /* Button styles */
  .btn.btn-primary { background: #2563eb; color: white; border: none; padding: 8px 16px; border-radius: 4px; }
  .btn.btn-primary:hover { background: #1d4ed8; }
</style> 