# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # Memory-optimized connection pooling for 512MB plan
  # Reduced from default to minimize memory usage
  # Each connection uses ~2-8MB of memory
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 2 } %>  # Reduced from 5 to 2
  timeout: 5000
  # Connection pool optimization
  prepared_statements: false  # Reduces memory per connection
  statement_timeout: 30000    # 30 seconds to prevent long-running queries

development:
  <<: *default
  database: bizblasts_development
  pool: 3  # Slightly higher for development convenience
  # The specified database role being used to connect to PostgreSQL.
  # To create additional roles in PostgreSQL see `$ createuser --help`.
  # When left blank, PostgreSQL will use the default role. This is
  # the same name as the operating system user running Rails.
  #username: app

  # The TCP port the server listens on. Defaults to 5432.
  # If your server runs on a different port number, change accordingly.
  #port: 5432

  # Schema search path. The server defaults to $user,public
  #schema_search_path: myapp,sharedapp,public

  # Minimum log levels, in increasing order:
  #   debug5, debug4, debug3, debug2, debug1,
  #   log, notice, warning, error, fatal, and panic
  # Defaults to warning.
  #min_messages: notice

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test: &test
  <<: *default
  # Force predictable name and host for reliable local testing & parallel_tests
  database: bizblasts_test<%= ENV['TEST_ENV_NUMBER'] %>
  username: <%= ENV.fetch("DATABASE_USERNAME", "brianlane") %> # Use macOS username as default
  password: <%= ENV.fetch("DATABASE_PASSWORD", "") %> # Default to empty password for local dev
  host: localhost 
  port: <%= ENV.fetch("DATABASE_PORT", 5432) %>
  pool: 5 # Slightly higher for parallel tests
  prepared_statements: false # Disable for test speed
  variables:
    statement_timeout: '10s'

# For parallel testing setup
<% (1..ENV.fetch('PARALLEL_TEST_PROCESSORS', 1).to_i).each do |i| %>
test_<%= i %>:
  <<: *test
  database: bizblasts_test_<%= i %>
<% end %>

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="postgres://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  primary:
    <<: *default
    # Memory-optimized settings for 512MB plan
    pool: 2  # Minimal connections to reduce memory usage
    timeout: 5000
    prepared_statements: false
    # Force TCP connection instead of Unix socket
    url: <%= ENV['DATABASE_URL'] %>
    # If URL isn't provided, use these settings
    database: <%= ENV['DATABASE_NAME'] || 'bizblasts_production' %>
    username: <%= ENV['DATABASE_USERNAME'] %>
    password: <%= ENV['DATABASE_PASSWORD'] %>
    host: <%= ENV['DATABASE_HOST'] %>
    port: <%= ENV['DATABASE_PORT'] || '5432' %>
    # Force TCP sockets by setting this to false
    host_type: tcp
  
  # Memory-optimized service-specific database connections
  # Use minimal pools for each service
  cache:
    <<: *default
    pool: 1  # Cache only needs 1 connection
    timeout: 5000
    prepared_statements: false
    # Force TCP connection instead of Unix socket
    url: <%= ENV['DATABASE_URL'] %>
    database: <%= ENV['DATABASE_NAME'] || 'bizblasts_production' %>
    username: <%= ENV['DATABASE_USERNAME'] %>
    password: <%= ENV['DATABASE_PASSWORD'] %>
    host: <%= ENV['DATABASE_HOST'] %>
    port: <%= ENV['DATABASE_PORT'] || '5432' %>
    # Force TCP sockets by setting this to false
    host_type: tcp
  
  queue:
    <<: *default
    pool: 2  # Queue needs minimal connections for SolidQueue
    timeout: 5000
    prepared_statements: false
    # Force TCP connection instead of Unix socket
    url: <%= ENV['DATABASE_URL'] %>
    database: <%= ENV['DATABASE_NAME'] || 'bizblasts_production' %>
    username: <%= ENV['DATABASE_USERNAME'] %>
    password: <%= ENV['DATABASE_PASSWORD'] %>
    host: <%= ENV['DATABASE_HOST'] %>
    port: <%= ENV['DATABASE_PORT'] || '5432' %>
    # Force TCP sockets by setting this to false
    host_type: tcp
  
  cable:
    <<: *default
    pool: 1  # Action Cable minimal connection
    timeout: 5000
    prepared_statements: false
    # Force TCP connection instead of Unix socket
    url: <%= ENV['DATABASE_URL'] %>
    database: <%= ENV['DATABASE_NAME'] || 'bizblasts_production' %>
    username: <%= ENV['DATABASE_USERNAME'] %>
    password: <%= ENV['DATABASE_PASSWORD'] %>
    host: <%= ENV['DATABASE_HOST'] %>
    port: <%= ENV['DATABASE_PORT'] || '5432' %>
    # Force TCP sockets by setting this to false
    host_type: tcp
  
  # For multiple database connections, we'll rely on Rails to set up connections
  # based on the DATABASE_URL environment variable
